GaitPart(
  (Backbone): SetBlockWrapper(
    (forward_block): Plain(
      (feature): Sequential(
        (0): BasicConv2d(
          (conv): Conv2d(1, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
        )
        (1): LeakyReLU(negative_slope=0.01, inplace=True)
        (2): BasicConv2d(
          (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (3): LeakyReLU(negative_slope=0.01, inplace=True)
        (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (5): FocalConv2d(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (6): LeakyReLU(negative_slope=0.01, inplace=True)
        (7): FocalConv2d(
          (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (8): LeakyReLU(negative_slope=0.01, inplace=True)
        (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
        (10): FocalConv2d(
          (conv): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (11): LeakyReLU(negative_slope=0.01, inplace=True)
        (12): FocalConv2d(
          (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (13): LeakyReLU(negative_slope=0.01, inplace=True)
      )
    )
  )
  (Head): SeparateFCs()
  (HPP): SetBlockWrapper()
  (TFA): PackSequenceWrapper(
    (pooling_func): TemporalFeatureAggregator(
      (conv1d3x1): ModuleList(
        (0): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (1): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (2): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (3): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (4): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (5): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (6): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (7): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (8): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (9): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (10): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (11): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (12): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (13): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (14): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
        (15): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(1,), stride=(1,), bias=False)
          )
        )
      )
      (avg_pool3x1): AvgPool1d(kernel_size=(3,), stride=(1,), padding=(1,))
      (max_pool3x1): MaxPool1d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)
      (conv1d3x3): ModuleList(
        (0): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (1): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (2): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (3): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (4): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (5): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (6): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (7): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (8): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (9): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (10): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (11): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (12): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (13): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (14): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
        (15): Sequential(
          (0): BasicConv1d(
            (conv): Conv1d(128, 32, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
          (1): LeakyReLU(negative_slope=0.01, inplace=True)
          (2): BasicConv1d(
            (conv): Conv1d(32, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          )
        )
      )
      (avg_pool3x3): AvgPool1d(kernel_size=(5,), stride=(1,), padding=(2,))
      (max_pool3x3): MaxPool1d(kernel_size=5, stride=1, padding=2, dilation=1, ceil_mode=False)
    )
  )
)
